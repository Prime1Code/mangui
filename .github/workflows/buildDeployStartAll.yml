name: Build-Deploy-Start-All

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup gradle version from gradle wrapper
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper

      - name: Run gradle bootJar build
        run: ./gradlew bootJar

      - name: Upload Backend Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: build/libs/*.jar

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u prime1docker --password-stdin

      - name: Build and Push Backend Docker Image
        run: |
          docker build -t prime1docker/mangui-backend:latest -f dockerfile .
          docker push prime1docker/mangui-backend:latest

  frontend:
    needs: backend
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js lts/iron
        uses: actions/setup-node@v4
        with:
          node-version: lts/iron
          check-latest: true
          cache: 'npm'
          cache-dependency-path: "./frontend/package-lock.json"

      - name: Get Git Commit Hash
        run: echo "REACT_APP_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - run: npm ci --legacy-peer-deps
      - run: CI=true npm run build --if-present
        env:
          REACT_APP_VERSION: ${{ env.REACT_APP_VERSION }}

      - name: Upload Frontend Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u prime1docker --password-stdin

      - name: Build and Push Frontend Docker Image
        run: |
          docker build -t prime1docker/mangui-frontend:latest -f dockerfile ./frontend
          docker push prime1docker/mangui-frontend:latest

  deploy_start:
    needs: frontend
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Download Backend Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: build/libs/

      - name: Download Frontend Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/build/

      - name: Deploy Backend to Server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.REMOTE_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          SOURCE: "build/libs/"
          TARGET: ${{ secrets.REMOTE_TARGET_BACKEND }}

      - name: Delete old frontend builds
        uses: appleboy/ssh-action@v1.0.3
        with:
          key: ${{ secrets.REMOTE_SSH_KEY }}
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          script: |
            ./deleteOldFrontendBuilds.sh

      - name: Deploy Frontend to Server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.REMOTE_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          SOURCE: "frontend/build/"
          TARGET: ${{ secrets.REMOTE_TARGET_FRONTEND }}

      - name: Start Services on Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          key: ${{ secrets.REMOTE_SSH_KEY }}
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          script: |
            ./createDockerImagesAndRun.sh
